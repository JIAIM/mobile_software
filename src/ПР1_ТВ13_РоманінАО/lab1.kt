//Імпорт необхідних нам функцій
import kotlin.math.roundToInt
import java.math.BigDecimal
import java.math.RoundingMode

fun task1(){
    /* Завдання №1
     Написати мобільний калькулятор для розрахунку складу сухої та горючої маси палива та
нижчої теплоти згоряння для робочої, сухої та горючої маси за заданим складом компонентів
палива, що задаються у вигляді значень окремих компонентів типу: Hp, Cp, Sp, Np, Op, W, Ap */

    //Запишемо дані про компоненти палива
    val Hp = 1.4
    val Cp = 70.5
    val Sp = 1.7
    val Np = 0.8
    val Op = 1.9
    val W = 7.0
    val Ap = 16.7

    /*Тестові дані контрольного прикладу
    val Hp = 1.9
    val Cp = 21.1
    val Sp = 2.6
    val Np = 0.2
    val Op = 7.1
    val W = 53.0
    val Ap = 14.1*/


    //Обрахуємо коефіцієнт переходу від робочої до сухої маси та коефіцієнт переходу від робочої до горючої
    val Kpc = 100 / (100 - W)
    val Kpg = 100 / (100 - W - Ap)

    //Перевіримо коєфіцієнти
    val Hc = Hp * Kpc
    val Cc = Cp * Kpc
    val Sc = Sp * Kpc
    val Nc = Np * Kpc
    val Oc = Op * Kpc
    val Ac = Ap * Kpc
    /*Якщо сума частки компонентів становитеме 100%, то все добре,
    інакше виведемо помилку за допомогою функції IllegalArgumentException
    Тут використаю фукнцію з біблаотеки math - roundToInt(), для того щоб округлити значення та перевести його в int,
    оскільки дані типу double можуть порівнюватися не правильно через велику кількість знаків після коми*/
    if((Hc + Cc + Sc + Nc + Oc + Ac).roundToInt() != 100){
        throw IllegalArgumentException("Сума повинна дорівнювати 100%. Коефіцієнт переходу від робочої до сухої маси обраховано неправильно")
    }

    //Тут виконаємо перевірку таку саму, як і до цього
    val Hg = Hp * Kpg
    val Cg = Cp * Kpg
    val Sg = Sp * Kpg
    val Ng = Np * Kpg
    val Og = Op * Kpg

    if((Hg + Cg + Sg + Ng + Og).roundToInt() != 100){
        throw IllegalArgumentException("Сума повинна дорівнювати 100%. Коефіцієнт переходу від робочої до горючої маси обраховано неправильно")
    }

    /* Результат виразу приводимо до BigDecimal для точного обчислення з плаваючою комою.
     Використовуємо метод setScale(2, RoundingMode.HALF_UP) для заокруглення до 2-х десяткових знаків:
     RoundingMode.HALF_UP означає заокруглення "за арифметичними правилами" —
     якщо наступна цифра після заокруглюваної більше або дорівнює 5, число збільшується на 1.
     Після заокруглення значення перетворюється на тип Double.*/
    //Розрахуємо нижчу теплоту згорання
    val QpH = BigDecimal((339 * Cp + 1030 * Hp - 108.8 * (Op - Sp) - 25 * W)).setScale(2, RoundingMode.HALF_UP).toDouble()/1000
    //Перерахуємо дану теплоту на суху масу
    val QcH = BigDecimal((QpH + 0.025 * W) * 100 / (100 - W)).setScale(2, RoundingMode.HALF_UP).toDouble()
    //Перерахуємо дану теплоту на горючу масу
    val QgH = BigDecimal((QpH + 0.025 * W) * (100 / (100 - W - Ap))).setScale(2, RoundingMode.HALF_UP).toDouble()

    //Виведемо наші результати
    println("Task #1\nQpH: $QpH MДж, QcH: $QcH MДж, QgH: $QgH MДж\n")
}

fun task2(){
    /* Завдання №2
     Написати мобільний калькулятор для перерахунку елементарного складу та нижчої
теплоти згоряння мазуту на робочу масу для складу горючої маси мазуту, що задається
наступними параметрами: вуглець, %; водень, %; кисень, %; сірка, %; нижча теплота згоряння
горючої маси мазуту, МДж/кг; вологість робочої маси палива, %; зольність сухої маси, %; вміст
ванадію (V), мг/кг.*/

    //Запишемо дані про склад мазуту
    val Hg = 85.5
    val Cg = 11.2
    val Og = 0.8
    val Sg = 2.5
    val QgH = 40.4
    val W = 2.0
    val A = 0.15
    val Vg = 333.3

    //Обчислимо коєфіцієнт
    val kef = (100 - W - A)/100

    //Вирахуємо нові дані для елементарного складу
    val Hp = Hg * kef
    val Cp = Cg * kef
    val Sp = Sg * kef
    val Op = Og * kef
    val Ap = A * kef
    val Vp = Vg * kef

    //Перерахуємо нижчу теплота згоряння мазуту
    val QpH = BigDecimal(QgH*kef - 0.025*W).setScale(2, RoundingMode.HALF_UP).toDouble()
    //Виведемо наші результати
    println("Task #2\nQgh: $QgH МДж, QpH: $QpH МДж")
    println("Елементарний склад:\nВуглець: $Hp\nВодень: $Cp\nКисень: $Op\nСірка: $Sp\nЗола: $Ap\nВанадій: $Vp")
}

fun main() {
    task1()
    task2()
}
